#include "buffer.h"
#include <Arduino.h>

#define BUFFER_SIZE 32

int32_t coeff[BUFFER_SIZE] = {
    int32_t(-0.002170152823703389195764135166655250941*65536.0f),
    int32_t(0.007951107018370037055055021824045979884*65536.0f),
    int32_t(0.009238388775222768078965174254335579462*65536.0f),
    int32_t(0.009863746118014478023172664222784078447*65536.0f),
    int32_t(0.006526303848246229992458022906021142262*65536.0f),
    int32_t(-0.001730692089915518861592547139593989414*65536.0f),
    int32_t(-0.013526356452728968693399735911953030154*65536.0f),
    int32_t(-0.025036014439617702148632716330212133471*65536.0f),
    int32_t(-0.03078962373282035855370786237017455278*65536.0f),
    int32_t(-0.025248348197086899202812304565668455325*65536.0f),
    int32_t(-0.004841044407292082081550876893061285955*65536.0f),
    int32_t(0.030317683864367173107723374414490535855*65536.0f),
    int32_t(0.075688836708944426390210935551294824108*65536.0f),
    int32_t(0.122999781771090499482568247913150116801*65536.0f),
    int32_t(0.162256799963743481018951797523186542094*65536.0f),
    int32_t(0.184518311232022835799426729863625951111*65536.0f),
    int32_t(0.184518311232022835799426729863625951111*65536.0f),
    int32_t(0.162256799963743481018951797523186542094*65536.0f),
    int32_t(0.122999781771090499482568247913150116801*65536.0f),
    int32_t(0.075688836708944426390210935551294824108*65536.0f),
    int32_t(0.030317683864367173107723374414490535855*65536.0f),
    int32_t(-0.004841044407292082081550876893061285955*65536.0f),
    int32_t(-0.025248348197086899202812304565668455325*65536.0f),
    int32_t(-0.03078962373282035855370786237017455278*65536.0f),
    int32_t(-0.025036014439617702148632716330212133471*65536.0f),
    int32_t(-0.013526356452728968693399735911953030154*65536.0f),
    int32_t(-0.001730692089915518861592547139593989414*65536.0f),
    int32_t(0.006526303848246229992458022906021142262*65536.0f),
    int32_t(0.009863746118014478023172664222784078447*65536.0f),
    int32_t(0.009238388775222768078965174254335579462*65536.0f),
    int32_t(0.007951107018370037055055021824045979884*65536.0f),
    int32_t(-0.002170152823703389195764135166655250941*65536.0f)};

uint32_t buffer[BUFFER_SIZE] = {0};
int buffer_index = 0;
int remplissage_buffer = 0;

void add_buffer(uint16_t new_val);
uint16_t buffer_out();

uint16_t buff_new_val(uint16_t new_val)
{
    add_buffer(new_val);
    return buffer_out();
}

void add_buffer(uint16_t new_val)
{
    // avant on change l'index comme ca index sur premi√®re valeur
    // rempliqqage a l'envers pour avoir les valeur dans l'ordre
    buffer_index--;
    if (buffer_index < 0)
        buffer_index = BUFFER_SIZE - 1;

    buffer[buffer_index] = new_val;

    if (remplissage_buffer < BUFFER_SIZE)
        remplissage_buffer++;
}

uint16_t buffer_out()
{
    if (remplissage_buffer < BUFFER_SIZE)
        return -1;
    int32_t sum = 0;
    for (int i = 0; i < BUFFER_SIZE; i++)
    {
        sum += buffer[(buffer_index + i) % BUFFER_SIZE] * coeff[i];
    }
    sum = sum >> 16;
    return sum;
}

void reset_buffer()
{
    remplissage_buffer = 0;
}

void print_buffer()
{
    for (int i = 0; i < remplissage_buffer; i++)
    {  
        Serial.print(buffer[(buffer_index + i) % BUFFER_SIZE]);
        if((buffer[(buffer_index + i) % BUFFER_SIZE])<10)
            Serial.print(' ');
        Serial.print(" | ");
    }
    Serial.print('\n');
}
